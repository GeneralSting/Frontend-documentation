Angular basics:

	-module: (root AppModule)
		-component (root -> AppComponent)
			-html template(view, html)
			-Class(code, ts, data & methods)
			-metadata(information (angular class)), decorator
		-services
			->class with logic of app

	-attribute vs property -> attributes initialize DOM properties and then they are done. 
	Attribute values cannot change once they are initialized

	-package.json
		->dependencies
			-packages required for development and deployment
		->devDependencies
			-packages only reqired for development

	-(click), (ngModel) -> () event binding


	-dependency injection -> a coding pattern in which a class receives the instances of object it needs
	(dependencies) from an external source(angular injector)
	rather than creating them itself

	-tap operator to access emitted item without modifing them

	-router-outlet??

	-angular module is a class with an NgModule decorator.
	@NgModule decorator:
		---->Angular module
			-organize the pieces of application, arrange them into blocks
			-provide a template resolution enviroment
			-aggregate and re-export
		
			->declares, bootstrap -> component, directives, pipes
			->exports -> component ..., module, @angular module, 3rd party module
			->import -> module...

		---->bootstrap array:
			->bootstrap array should only be used in the root application module, AppModule.
			->every app must bootstrap at least one compoennt, the root app component

		---->declarations array
			->every compoenent, directive and pipe must belong to ONLY ONE angular module
			->only declare components, directive and pipes(they are private so you can use them
	 		only in same module otherwise exporting is expected)

		---->exports array 
			->in appModule exports: [ exported scripts only can be used by other modules ]

		---->BrowserModule imports only in appModule
			-BrowserModule > commonModule